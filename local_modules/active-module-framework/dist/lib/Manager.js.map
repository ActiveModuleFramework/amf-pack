{"version":3,"file":"Manager.js","sourceRoot":"","sources":["../../src/lib/Manager.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from 'fs'\r\nimport * as util from 'util'\r\nimport * as capcon from 'capture-console'\r\nimport * as path from 'path'\r\nimport * as express from 'express'\r\n\r\nimport { Module } from './Module';\r\nimport { LocalDB } from './LocalDB';\r\nimport { Session } from './Session';\r\nimport { AdapterResult } from './Session';\r\nimport { BaseHtml } from './BaseHtml'\r\n\r\ninterface SessionResult{\r\n\tglobalHash: string|null\r\n\tsessionHash:string|null\r\n\tresult:any\r\n}\r\n\r\n/**\r\n *マネージャ初期化用パラメータ\r\n *\r\n * @export\r\n * @interface ManagerParams\r\n * @property {string} rootPath\t\t一般コンテンツのローカルパス\r\n * @property {string} remotePath\t一般コンテンツのリモートパス\r\n * @property {string} execPath\t\tコマンド実行用リモートパス\r\n * @property {string} localDBPath\tローカルDBパス\r\n * @property {string} modulePath\tモジュール配置パス\r\n * @property {string[]} cssPath\t\t自動ロード用CSSパス\r\n * @property {string[]} jsPath\t\t一般コンテンツのローカルパス\r\n * @property {string[]} jsPriority\t優先JSファイル設定\r\n * @property {boolean} debug\t\tデバッグ用メッセージ出力\r\n * @property {number | string} listen\t受付ポート/UNIXドメインソケット\r\n */\r\nexport interface ManagerParams {\r\n\trootPath: string\r\n\tremotePath: string\r\n\texecPath: string\r\n\tindexPath:string\r\n\tlocalDBPath: string\r\n\tmodulePath: string\r\n\tcssPath: string[]\r\n\tjsPath: string[]\r\n\tjsPriority: string[]\r\n\tdebug: boolean\r\n\tlisten: number | string\r\n\tlistened?:((port:string|number)=>void)\r\n}\r\n\r\n/**\r\n *フレームワーク総合管理用クラス\r\n *\r\n * @export\r\n * @class Manager\r\n */\r\nexport class Manager {\r\n\tdebug:boolean\r\n\tlocalDB: LocalDB = new LocalDB()\r\n\tstderr: string = ''\r\n\tmodules: { [key: string]: typeof Module } = {}\r\n\tpriorityList: typeof Module[][] = []\r\n\texpress : express.Express\r\n\tstatic initFlag = false\r\n\t/**\r\n\t *Creates an instance of Manager.\r\n\t * @memberof Manager\r\n\t */\r\n\tconstructor(params:ManagerParams) {\r\n\t\tthis.debug = params.debug\r\n\t\tthis.express = express()\r\n\t\tthis.output('--- Start Manager')\r\n\t\t//エラーメッセージをキャプチャ\r\n\t\tcapcon.startCapture(process.stderr, (stderr) => {\r\n\t\t\tthis.stderr += stderr;\r\n\t\t})\r\n\t\tthis.init(params)\r\n\t}\r\n\t/**\r\n\t *\r\n\t *\r\n\t * @param {string} msg\r\n\t * @param {*} params\r\n\t * @memberof Manager\r\n\t */\r\n\toutput(msg:string,...params:any[]){\r\n\t\tif(this.debug)\r\n\t\t\tconsole.log(msg, ...params)\r\n\t}\r\n\t/**\r\n\t * 初期化処理\r\n\t *\r\n\t * @param {string} localDBPath\tローカルデータベースパス\r\n\t * @param {string} modulePath\tモジュールパス\r\n\t * @returns {Promise<boolean>}\ttrue:正常終了 false:異常終了\r\n\t * @memberof Manager\r\n\t */\r\n\tasync init(params: ManagerParams):Promise<boolean>{\r\n\t\t//ファイルの存在確認\r\n\t\tfunction isExistFile(path:string) {\r\n\t\t\ttry {\r\n\t\t\t\tfs.statSync(path)\r\n\t\t\t} catch (e) {\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t}\r\n\t\t//Expressの初期化\r\n\t\tthis.initExpress(params)\r\n\r\n\t\t//ローカルDBを開く\r\n\t\tif (!await this.localDB.open(params.localDBPath)) {\r\n\t\t\tconsole.error(\"ローカルDBオープンエラー:%s\", params.localDBPath)\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t//モジュールを読み出す\r\n\t\tlet files: string[]\r\n\t\ttry{\r\n\t\t\tfiles = fs.readdirSync(params.modulePath)\r\n\t\t}catch(e){\r\n\t\t\tfiles = []\r\n\t\t}\r\n\t\tconst modules: { [key: string]: typeof Module } = {};\r\n\t\tfor (let ent of files) {\r\n\t\t\tconst dir = fs.statSync(path.join(params.modulePath, ent)).isDirectory()\r\n\t\t\tlet r: {[key:string]:typeof Module}|null = null\r\n\t\t\tif (!dir){\r\n\t\t\t\tlet name = ent\r\n\t\t\t\tlet ext = name.slice(-3)\r\n\t\t\t\tlet ext2 = name.slice(-5)\r\n\t\t\t\tif (ext === '.js' || (ext === '.ts' && ext2 !== '.d.ts'))\r\n\t\t\t\t\tr = require(params.modulePath + '/' + name) as { [key: string]: typeof Module }\r\n\r\n\t\t\t}else{\r\n\t\t\t\tconst basePath = `${params.modulePath}/${ent}/`\r\n\t\t\t\tlet path:string|null = null\r\n\t\t\t\tfor(const name of ['index.ts','index.js',ent+'.ts',ent+'.js']){\r\n\t\t\t\t\tif (isExistFile(basePath + name)){\r\n\t\t\t\t\t\tpath = basePath + name\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (path)\r\n\t\t\t\t\tr = require(path) as { [key: string]: typeof Module }\r\n\r\n\t\t\t}\r\n\t\t\tif(r){\r\n\t\t\t\tconst name = Object.keys(r)[0]\r\n\t\t\t\tmodules[name] = r[name]\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tthis.modules = modules;\r\n\r\n\t\t//依存関係の重み付け\r\n\t\tconst sortList: { key: number, module: typeof Module }[] = [];\r\n\t\tfor (let index in modules) {\r\n\t\t\tconst module = modules[index];\r\n\t\t\tsortList.push({ key: Manager.getPriority(modules, module), module: module })\r\n\t\t}\r\n\t\tsortList.sort(function (a, b) {\r\n\t\t\treturn a.key - b.key;\r\n\t\t})\r\n\r\n\t\t//重み付けを配列のキーに変換\r\n\t\tconst priorityList: typeof Module[][] = [];\r\n\t\tfor (let v of sortList) {\r\n\t\t\tconst key = v.key - 1;\r\n\t\t\tif (priorityList[key])\r\n\t\t\t\tpriorityList[key].push(v.module)\r\n\t\t\telse\r\n\t\t\t\tpriorityList[key] = [v.module];\r\n\t\t}\r\n\t\tthis.priorityList = priorityList;\r\n\r\n\t\t//依存関係を考慮して初期化\r\n\t\tlet flag = true;\r\n\t\tfor (let v in priorityList) {\r\n\t\t\tlet modules = priorityList[v];\r\n\t\t\tfor (let module of modules) {\r\n\t\t\t\tif (module.onCreateModule) {\r\n\t\t\t\t\tmodule.setManager(this)\r\n\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tthis.output(\"モジュール初期化:%s\", module.name)\r\n\t\t\t\t\t\tconst result = await module.onCreateModule()\r\n\t\t\t\t\t\tif (!result) {\r\n\t\t\t\t\t\t\tconsole.error(\"モジュール初期化エラー:%s\", module.name)\r\n\t\t\t\t\t\t\tflag = false\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!flag) {\r\n\t\t\t\t\t\t\tManager.initFlag = false;\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tconsole.error(\"モジュール初期化例外\")\r\n\t\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t\t\tManager.initFlag = false;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tManager.initFlag = true\r\n\t\tthis.listen(params)\r\n\t\treturn true\r\n\t}\r\n\r\n\t/**\r\n\t *Expressの設定を行う\r\n\t *\r\n\t * @param {string} path\t\t\t\tドキュメントのパス\r\n\t * @memberof Manager\r\n\t */\r\n\tinitExpress(params: ManagerParams) : void{\r\n\t\tconst commands: { [key:string]:(req: express.Request, res: express.Response)=>void} = {};\r\n\t\tcommands.exec = (req: express.Request, res: express.Response) => { this.exec(req, res) }\r\n\t\t//一般コンテンツの対応付け\r\n\t\tthis.express.use(params.remotePath, express.static(params.rootPath));\r\n\t\t//クライアント接続時の処理\r\n\t\tthis.express.all(params.remotePath, async (req, res, next)=>{\r\n\t\t\t//初期化が完了しているかどうか\r\n\t\t\tif (!Manager.initFlag) {\r\n\t\t\t\tres.header(\"Content-Type\", \"text/plain; charset=utf-8\")\r\n\t\t\t\tres.end(this.stderr)\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t//コマンドパラメータの解析\r\n\t\t\tconst cmd = req.query.cmd as string\r\n\t\t\tif (cmd != null) {\r\n\t\t\t\tconst command = commands[cmd]\r\n\t\t\t\tif (command != null) {\r\n\t\t\t\t\tcommand(req, res)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tres.json({ error: \"リクエストエラー\" })\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst path = (req.header('location_path') || '') + params.remotePath;\r\n\t\t\t\tif (!await BaseHtml.output(res, path,params.rootPath,\r\n\t\t\t\t\tparams.indexPath,params.cssPath, params.jsPath, params.jsPriority))\r\n\t\t\t\t\tnext()\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 終了処理\r\n\t *\r\n\t * @memberof Manager\r\n\t */\r\n\tasync destory() {\r\n\t\tconst priorityList = this.priorityList;\r\n\t\tfor (let i = priorityList.length - 1; i >= 0; i--) {\r\n\t\t\tconst modules = priorityList[i];\r\n\t\t\tconst promise = [];\r\n\t\t\tfor (const module of modules) {\r\n\t\t\t\tthis.output(\"モジュール解放化:%s\", module.name)\r\n\t\t\t\tif (module.onDestroyModule)\r\n\t\t\t\t\tpromise.push(module.onDestroyModule())\r\n\t\t\t}\r\n\t\t\tawait Promise.all(promise);\r\n\t\t}\r\n\t\tthis.output('--- Stop Manager');\r\n\t}\r\n\t/**\r\n\t *\r\n\t *\r\n\t * @private\r\n\t * @static\r\n\t * @param {{ [key: string]: typeof Module }} modules\tモジュールリスト\r\n\t * @param {typeof Module} module\t\t\t\t\t\tモジュールタイプ\r\n\t * @returns {number} 優先度\r\n\t * @memberof Manager\r\n\t */\r\n\tprivate static getPriority(modules: { [key: string]: typeof Module }, module: typeof Module) : number{\r\n\t\tif (module == null)\r\n\t\t\treturn 0;\r\n\r\n\t\tconst request = module.REQUEST;\r\n\t\tlet priority = 1;\r\n\t\tif (!request)\r\n\t\t\treturn priority;\r\n\t\tfor (const module2 of request) {\r\n\t\t\tpriority = Math.max(priority, Manager.getPriority(modules, modules[module2]) + 1)\r\n\t\t}\r\n\t\treturn priority;\r\n\t}\r\n\t/**\r\n\t *ローカルDBを返す\r\n\t *\r\n\t * @returns {LocalDB} ローカルDB\r\n\t * @memberof Manager\r\n\t */\r\n\tgetLocalDB() : LocalDB{\r\n\t\treturn this.localDB\r\n\t}\r\n\t/**\r\n\t *モジュール処理の区分け実行\r\n\t *\r\n\t * @private\r\n\t * @param {express.Request} req  リクエスト\r\n\t * @param {express.Response} res レスポンス\r\n\t * @memberof Manager\r\n\t */\r\n\tprivate exec(req: express.Request, res: express.Response) {\r\n\t\tlet postData = \"\";\r\n\t\treq.on('data', function (v) {\r\n\t\t\tpostData += v;\r\n\t\t}).on('end', async () => {\r\n\t\t\tconst params = JSON.parse(postData);\r\n\t\t\t//マネージャ機能をセッション用にコピー\r\n\t\t\tconst session = new Session()\r\n\t\t\tawait session.init(this.localDB, params.globalHash, params.sessionHash, this.modules)\r\n\t\t\tsession.result = { globalHash: session.getGlobalHash(), sessionHash: session.getSessionHash(), results: [] };\r\n\r\n\t\t\tif (params.functions) {\r\n\t\t\t\tconst results = session.result.results\r\n\t\t\t\t//要求された命令の解析と実行\r\n\t\t\t\tfor (const func of params.functions) {\r\n\t\t\t\t\tconst result: AdapterResult = { value: null, error: null }\r\n\t\t\t\t\tresults.push(result)\r\n\r\n\t\t\t\t\tif (!func.function) {\r\n\t\t\t\t\t\tresult.error = util.format(\"命令が指定されていない\", func.function)\r\n\t\t\t\t\t\tcontinue\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst name = func.function.split('.');\r\n\t\t\t\t\tif (name.length != 2) {\r\n\t\t\t\t\t\tresult.error = util.format(\"クラス名が指定されていない: %s\", func.function)\r\n\t\t\t\t\t\tcontinue\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!this.modules[name[0]]) {\r\n\t\t\t\t\t\tresult.error = util.format(\"クラスが存在しない: %s\", func.function)\r\n\t\t\t\t\t\tcontinue\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//クラスインスタンスを取得\r\n\t\t\t\t\tconst classPt = await session.getModule(this.modules[name[0]])\r\n\r\n\t\t\t\t\t//ファンクション名にプレフィックスを付ける\r\n\t\t\t\t\tconst funcName = 'JS_' + name[1]\r\n\t\t\t\t\t//ファンクションを取得\r\n\t\t\t\t\tconst funcPt = (classPt as any)[funcName] as Function\r\n\t\t\t\t\tif (!funcPt) {\r\n\t\t\t\t\t\tresult.error = util.format(\"命令が存在しない: %s\", func.function)\r\n\t\t\t\t\t\tcontinue\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!func.params) {\r\n\t\t\t\t\t\tresult.error = util.format(\"パラメータ書式エラー: %s\", func.function)\r\n\t\t\t\t\t\tcontinue\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (funcPt.length !== func.params.length) {\r\n\t\t\t\t\t\tresult.error = util.format(\"パラメータの数が一致しない: %s\", func.function)\r\n\t\t\t\t\t\tcontinue\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//命令の実行\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tthis.output('命令実行: %s %s', funcName, JSON.stringify(func.params))\r\n\t\t\t\t\t\tresult.value = await funcPt.call(classPt, ...func.params)\r\n\t\t\t\t\t\tthis.output('実行結果: %s', JSON.stringify(result.value))\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\tconsole.error(e);\r\n\t\t\t\t\t\tresult.error = util.format(\"モジュール実行エラー: %s\", func.function)\r\n\t\t\t\t\t\tcontinue\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//セッション終了\r\n\t\t\t\tsession.final()\r\n\t\t\t}\r\n\t\t\t//クライアントに返すデータを設定\r\n\t\t\tres.json(session.result)\r\n\t\t\tres.end()\r\n\t\t});\r\n\t}\r\n\t//待ち受け設定\r\n\tprivate\tlisten(params: ManagerParams) {\r\n\t\tlet port = 0\r\n\t\tlet path:string = ''\r\n\t\tif (typeof params.listen === 'number'){\r\n\t\t\tport = params.listen + parseInt(process.env.NODE_APP_INSTANCE || '0')\r\n\t\t}else{\r\n\t\t\tpath = params.listen + '.' + (process.env.NODE_APP_INSTANCE || '0')\r\n\t\t}\r\n\r\n\r\n\t\t//終了時の処理(Windowsでは動作しない)\r\n\t\tconst onExit: NodeJS.SignalsListener = async (signal: NodeJS.Signals) => {\r\n\t\t\tawait this.destory()\r\n\t\t\tif (path)\r\n\t\t\t\tthis.removeSock(path)\t//ソケットファイルの削除\r\n\t\t\tprocess.exit(0);\r\n\t\t}\r\n\t\tprocess.on('SIGINT', onExit)\r\n\t\tprocess.on('SIGTERM', onExit)\r\n\r\n\t\tif (port) {\r\n\t\t\t//ソケットの待ち受け設定\r\n\t\t\tthis.express.listen(port,()=>{\r\n\t\t\t\tthis.output('localhost:%d', port)\r\n\t\t\t\tif(params.listened)\r\n\t\t\t\t\tparams.listened(port)\r\n\t\t\t})\r\n\r\n\t\t} else {\r\n\t\t\t//ソケットファイルの削除\r\n\t\t\tthis.removeSock(path)\r\n\t\t\t//ソケットの待ち受け設定\r\n\t\t\tthis.express.listen(path,()=>{\r\n\t\t\t\tthis.output(path)\r\n\t\t\t\ttry {\r\n\t\t\t\t\tfs.chmodSync(path, '666')\t//ドメインソケットのアクセス権を設定\r\n\t\t\t\t\tif (params.listened)\r\n\t\t\t\t\t\tparams.listened(path)\r\n\t\t\t\t} catch (e) { }\r\n\t\t\t})\t//ソケットの待ち受け設定\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t *前回のソケットファイルの削除\r\n\t*\r\n\t* @memberof Main\r\n\t*/\r\n\tremoveSock(path:string) {\r\n\t\ttry {\r\n\t\t\tfs.unlinkSync(path)\r\n\t\t} catch (e) { }\r\n\t}\r\n\r\n}"]}