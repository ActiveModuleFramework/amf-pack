{"version":3,"file":"Module.js","sourceRoot":"","sources":["../../src/lib/Module.ts"],"names":[],"mappings":";;AAEA;;;;;GAKG;AACH,MAAa,MAAM;IAAnB;QAGC,YAAO,GAAiB,IAAI,CAAA;IA0B7B,CAAC;IAzBO,MAAM,CAAC,UAAU,CAAC,OAAgB,IAAI,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC;IACjE,MAAM,CAAC,UAAU,KAAc,OAAO,MAAM,CAAC,OAAO,CAAA,CAAC,CAAC;IACtD,MAAM,CAAC,KAAK,CAAC,cAAc,KAAuB,OAAO,IAAI,CAAA,CAAC,CAAC;IAC/D,MAAM,CAAC,KAAK,CAAC,eAAe,KAAuB,OAAO,IAAI,CAAA,CAAC,CAAC;IAChE,MAAM,CAAC,UAAU,KAAK,OAAO,MAAM,CAAC,OAAO,CAAC,UAAU,EAAE,CAAA,CAAC,CAAC;IAC1D,MAAM,CAAC,MAAM,CAAC,GAAW,EAAE,GAAG,MAAY,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,CAAA,CAAC,CAAC;IACrF,UAAU,CAAC,OAAgB,IAAU,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC;IAC9D,KAAK,CAAC,cAAc,KAAoB,CAAC;IACzC,KAAK,CAAC,YAAY,KAAoB,CAAC;IACvC,UAAU;QAChB,IAAI,CAAC,IAAI,CAAC,OAAO;YAChB,MAAM,CAAC,eAAe,CAAC,CAAA;QACxB,OAAO,IAAI,CAAC,OAAO,CAAA;IACpB,CAAC;IACM,aAAa,CAAC,IAAY,EAAE,QAAc,IAAS,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAA,CAAC,CAAA,IAAI,CAAA,CAAC,CAAC;IAC1H,aAAa,CAAC,IAAY,EAAE,KAAU,IAAU,IAAI,IAAI,CAAC,OAAO;QAAE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,EAAE,KAAK,CAAC,CAAA,CAAC,CAAC;IAC3G,cAAc,CAAC,IAAY,EAAE,QAAc,IAAS,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAA,CAAC,CAAA,IAAI,CAAA,CAAC,CAAC;IAC5H,cAAc,CAAC,IAAY,EAAE,KAAU,IAAU,IAAI,IAAI,CAAC,OAAO;QAAE,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,EAAE,KAAK,CAAC,CAAA,CAAC,CAAC;IAC7G,SAAS,CAAmB,WAAyB;QAC3D,IAAI,CAAC,IAAI,CAAC,OAAO;YAChB,MAAM,CAAC,eAAe,CAAC,CAAA;QACxB,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC,CAAA;IAC3C,CAAC;CAGD;AA7BD,wBA6BC","sourcesContent":["import { Manager } from './Manager'\r\nimport { Session } from './Session'\r\n/**\r\n *モジュール作成用基本クラス\r\n *\r\n * @export\r\n * @class Module\r\n */\r\nexport class Module {\r\n\tstatic REQUEST:string[]\r\n\tstatic manager: Manager\r\n\tsession: Session|null = null\r\n\tpublic static setManager(manager: Manager) { Module.manager = manager; }\r\n\tpublic static getManager(): Manager { return Module.manager }\r\n\tpublic static async onCreateModule(): Promise<boolean> { return true }\r\n\tpublic static async onDestroyModule(): Promise<boolean> { return true }\r\n\tpublic static getLocalDB() { return Module.manager.getLocalDB() }\r\n\tpublic static output(msg: string, ...params:any[]) { Module.manager.output(msg, ...params) }\r\n\tpublic setSession(session: Session): void { this.session = session; }\r\n\tpublic async onStartSession(): Promise<void> { }\r\n\tpublic async onEndSession(): Promise<void> { }\r\n\tpublic getSession(): Session {\r\n\t\tif (!this.session)\r\n\t\t\tthrow (\"Session Error\")\r\n\t\treturn this.session\r\n\t}\r\n\tpublic getGlobalItem(name: string, defValue?: any): any { return this.session ? this.session.getGlobalItem(name, defValue):null }\r\n\tpublic setGlobalItem(name: string, value: any): void { if (this.session) this.session.setGlobalItem(name, value) }\r\n\tpublic getSessionItem(name: string, defValue?: any): any { return this.session ? this.session.getSessionItem(name, defValue):null }\r\n\tpublic setSessionItem(name: string, value: any): void { if (this.session) this.session.setSessionItem(name, value) }\r\n\tpublic getModule<T extends Module>(constructor: { new(): T }): Promise<T|null> {\r\n\t\tif (!this.session)\r\n\t\t\tthrow (\"Session Error\")\r\n\t\treturn this.session.getModule(constructor)\r\n\t}\r\n\r\n\r\n}"]}