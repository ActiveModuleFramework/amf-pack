{"version":3,"file":"BaseHtml.js","sourceRoot":"","sources":["../../src/lib/BaseHtml.ts"],"names":[],"mappings":"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","sourcesContent":["import * as util from 'util';\r\nimport * as fs from 'fs';\r\nimport * as path from 'path'\r\nimport * as express from 'express'\r\nimport {sprintf} from 'sprintf'\r\n\r\ninterface FileInfo{\r\n\tdir: string\r\n\tname: string\r\n\tdate: Date\r\n}\r\n\r\n\r\n/**\r\n *トップページ表示用クラス\r\n*\r\n* @export\r\n* @class BaseHtml\r\n*/\r\nexport class BaseHtml {\r\n\t/**\r\n\t *初期ページの出力\r\n\t*\r\n\t* @static\r\n\t* @param {express.Response} res\tレスポンス\r\n\t* @param {string[]} cssPath\t\tCSSディレクトリ\r\n\t* @param {string[]} jsPath\t\tJSディレクトリ\r\n\t* @param {string[]} priorityJs\t優先度の高いJSファイル\r\n\t* @memberof BaseHtml\r\n\t*/\r\n\t/**\r\n\t *初期ページの出力\r\n\t *\r\n\t * @static\r\n\t * @param {express.Response} res\tレスポンス\r\n\t * @param {string} baseUrl\t\t\t基本パス\r\n\t * @param {string} rootPath\t\t\tルートパス\r\n\t * @param {string} indexPath\t\tindex.htmlテンプレートパス\r\n\t * @param {string[]} cssPath\t\tCSSディレクトリ\r\n\t * @param {string[]} jsPath\t\t\tJSディレクトリ\r\n\t * @param {string[]} priorityJs\t\t優先度の高いJSファイル\r\n\t * @returns\r\n\t * @memberof BaseHtml\r\n\t */\r\n\tstatic async output(res: express.Response, baseUrl:string,rootPath:string,\r\n\t\tindexPath:string,cssPath: string[], jsPath: string[], priorityJs: string[]) {\r\n\t\tfunction createJSInclude(files: FileInfo[]) {\r\n\t\t\tlet s = \"\";\r\n\t\t\tfor (const file of files) {\r\n\t\t\t\tconst dir = (file as any).dir\r\n\t\t\t\ts += util.format('\\n\\t<script type=\"text/javascript\" src=\"%s/%s\"></script>', dir, file.name);\r\n\t\t\t}\r\n\t\t\treturn s;\r\n\t\t}\r\n\t\tfunction createCSSInclude(files: FileInfo[]) {\r\n\t\t\tlet s = \"\";\r\n\t\t\tfor (const file of files) {\r\n\t\t\t\tconst dir = (file as any).dir\r\n\t\t\t\ts += util.format('\\n\\t<link rel=\"stylesheet\" href=\"%s/%s\">', dir,file.name);\r\n\t\t\t}\r\n\t\t\treturn s;\r\n\t\t}\r\n\t\t//ファイル名に日付情報を追加\r\n\t\tfunction addDateParam(files: FileInfo[]){\r\n\t\t\tfor (const file of files) {\r\n\t\t\t\tconst date = file.date\r\n\t\t\t\tfile.name +=\r\n\t\t\t\t\tsprintf('?ver=%04d%02d%02d%02d%02d%02d',\r\n\t\t\t\t\t\tdate.getFullYear(),\r\n\t\t\t\t\t\tdate.getMonth()+1,\r\n\t\t\t\t\t\tdate.getDate(),\r\n\t\t\t\t\t\tdate.getHours(),\r\n\t\t\t\t\t\tdate.getMinutes(),\r\n\t\t\t\t\t\tdate.getSeconds())\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet html;\r\n\t\ttry{\r\n\t\t\thtml = fs.readFileSync(indexPath, 'utf-8')\r\n\t\t}catch(e){\r\n\t\t\treturn false\r\n\t\t}\r\n\t\tconst cssFiles: FileInfo[] = []\r\n\t\tconst jsFiles: FileInfo[] = []\r\n\t\t//CSSファイルリストの読み込み\r\n\t\tfor (let dir of cssPath){\r\n\t\t\ttry{\r\n\t\t\t\tconst files = fs.readdirSync(`${rootPath}/${dir}`)\r\n\t\t\t\tfor (const name of files) {\r\n\t\t\t\t\tif (path.extname(name).toLowerCase() === '.css') {\r\n\t\t\t\t\t\tconst stat = fs.statSync(`${rootPath}/${dir}/${name}`)\r\n\t\t\t\t\t\tcssFiles.push({ dir, name, date: stat.mtime })\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}catch(e){}\r\n\r\n\t\t}\r\n\t\t//JSファイルリストの読み込み\r\n\t\tfor (let dir of jsPath) {\r\n\t\t\ttry {\r\n\t\t\t\tconst files = fs.readdirSync(`${rootPath}/${dir}`)\r\n\t\t\t\tfor (const name of files) {\r\n\t\t\t\t\tif (path.extname(name).toLowerCase() === '.js') {\r\n\t\t\t\t\t\tconst stat = fs.statSync(`${rootPath}/${dir}/${name}`)\r\n\t\t\t\t\t\tjsFiles.push({ dir, name, date: stat.mtime })\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch (e) { }\r\n\t\t}\r\n\t\t//JSを優先順位に従って並び替え\r\n\t\tjsFiles.sort((a,b)=>{\r\n\t\t\tconst v1 = priorityJs.indexOf(a.name)\r\n\t\t\tconst v2 = priorityJs.indexOf(b.name)\r\n\t\t\treturn v2 - v1\r\n\t\t})\r\n\r\n\t\t//時間情報の追加(キャッシュ対策)\r\n\t\taddDateParam(jsFiles)\r\n\t\taddDateParam(cssFiles)\r\n\r\n\t\tconst data = html.replace(\"[[SCRIPTS]]\", createJSInclude(jsFiles))\r\n\t\t\t.replace(\"[[CSS]]\", createCSSInclude(cssFiles))\r\n\t\tconst links:string[] = []\r\n\t\tfor(const file of cssFiles){\r\n\t\t\tconst dir = (file as any).dir\r\n\t\t\tlinks.push(`<${baseUrl}${dir}/${file.name}>;rel=preload;as=style;`)\r\n\t\t}\r\n\t\tfor (const file of jsFiles) {\r\n\t\t\tconst dir = (file as any).dir\r\n\t\t\tlinks.push(`<${baseUrl}${dir}/${file.name}>;rel=preload;as=script;`)\r\n\t\t}\r\n\t\tres.writeHead(200, { 'Content-Type': 'text/html; charset=UTF-8','link':links });\r\n\t\tres.end(data)\r\n\r\n\t\treturn true\r\n\t}\r\n}\r\n"]}